apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group POM_ARTIFACT_GROUP
version KROID_VERSION

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // test
    testImplementation 'junit:junit:4.12'
    testImplementation "org.robolectric:robolectric:4.0-beta-1"
}

android {
    compileSdkVersion COMPILE_SDK_VERSION
    defaultConfig {
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionCode KROID_VERSION_CODE
        versionName KROID_VERSION
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}



task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

publishing {
    publications {
        kroid(MavenPublication) {
            groupId POM_ARTIFACT_GROUP
            artifactId project.name
            version KROID_VERSION

            artifact sourcesJar
            artifact bundleReleaseAar

            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'kroid'
                    description 'Kotlin DSL for Android'
                    url PROJECT_URL

                    scm {
                        url SCM_URL
                        connection CONNECTION_URL
                        developerConnection DEVELOPER_CONNECTION_URL
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
                            distribution 'repo'
                            comments 'A business-friendly OSS license'
                        }
                    }
                    developers {
                        developer {
                            id 'mo3in'
                            name 'Mo3in'
                            email 'moein.hente@gmail.com'
                            site 'https://mo3in.me'
                        }
                    }
                }

                def dependenciesNode = asNode().appendNode('dependencies')

                configurations.api.dependencies.each { Dependency dep ->
                    final dependencyNode = dependenciesNode.appendNode('dependency')
                    if (dep.version == 'unspecified' || dep.group == 'unspecified') {
                        dep.version = KROID_VERSION
                        dep.group = POM_ARTIFACT_GROUP
                    }
                    dependencyNode.appendNode('version', dep.version)
                    dependencyNode.appendNode('groupId', dep.group)
                    dependencyNode.appendNode('artifactId', dep.name)
                }

                configurations.implementation.dependencies.each { Dependency dep ->
                    final dependencyNode = dependenciesNode.appendNode('dependency')
                    if (dep.version == 'unspecified' || dep.group == 'unspecified') {
                        dep.version = KROID_VERSION
                        dep.group = POM_ARTIFACT_GROUP
                    }
                    dependencyNode.appendNode('groupId', dep.group)
                    dependencyNode.appendNode('artifactId', dep.name)
                    dependencyNode.appendNode('version', dep.version)
                }
            }
        }
    }

    repositories {
        maven { url "${rootProject.buildDir}/maven" }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER') ?: ""
    key = System.getenv('BINTRAY_API_KEY') ?: ""

    publications = ['kroid']

    dryRun = BINTRAY_DRY_RUN

    pkg {
        userOrg = BINTRAY_USER_NAME
        repo = BINTRAY_REPO_NAME
        name = BINTRAY_PACKAGE_NAME
        licenses = ['MIT']
        vcsUrl = SCM_URL

        version {
            name = KROID_VERSION
            released = new Date()
        }
    }
}

task androidJavadocs(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}
artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}